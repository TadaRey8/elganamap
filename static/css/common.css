:global(html, body) {
    margin: 0;
    height: 100%;
}

:global(.splide__arrow) {
    width: 40px;
    height: 40px;
    background: #c0a2f0;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
}

:global(.splide__arrow--prev) {
    left: -56px;
}

:global(.splide__arrow--next) {
    right: -56px;
}

:global(.splide__pagination) {
    position: relative;
    /* static に戻す */
    bottom: 0;
    justify-content: center;
}

:global(.splide__pagination__page) {
    width: 12px;
    height: 12px;
    margin: 0 6px;
    border-radius: 50%;
    background: #858484;
    transition: background 1s;
}

:global(.splide__pagination__page.is-active) {
    background: #a88af0;
}

.map {
    width: 100vw;
    height: 100vh;
}

/* 再読み込みボタン */
.reload-btn {
    position: absolute;
    top: 12px;
    left: 50%;
    /* 画面中央へ */
    transform: translateX(-50%);
    /* 中央揃え */
    width: 90px;
    height: 40px;
    border: 1px solid #ccc;
    border-radius: 18px;
    background: rgba(255, 255, 255, 0.85);
    backdrop-filter: blur(6px);
    color: #333;
    font-weight: 600;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
    cursor: pointer;
    user-select: none;
    z-index: 60;
    /* サイドバー(50)より前面 */
}

.reload-btn:active {
    transform: translateX(-50%) scale(0.95);
}

.sidebar-wrap {
    position: absolute;
    top: 0;
    right: 0;
    width: 300px;
    height: 100vh;
    /* 高さマップサイズに合わせる */
    display: flex;
    /* はみ出さないようにする */
    flex-direction: column;
    /* 縦に並べる */
}

.sidebar {
    flex: 1 1 auto;
    /* 余った高さを全部使う */
    scrollbar-gutter: stable;
    overflow-y: auto;
    background: rgba(255, 255, 255, 0.9);
    padding: 12px;
}

.sidebar-title {
    margin: 0;
    padding: 20px;
    background: #a46cff;
    color: #ffffff;
    font-size: 1.5rem;
    font-weight: bold;
    text-align: center;
}

.card {
    justify-content: space-between;
    align-items: center;
    padding: 6px 8px;
    margin-bottom: 6px;
    border: 2px solid #c764f5be;
    border-radius: 3px;
    background: #f7f6f6;
}

.card>summary.header {
    justify-content: space-between;
    padding: 10px 10px;
    cursor: pointer;
}

.card .body {
    padding: 5px 10px;
    border-top: 1.5px solid #3a3939;
}

.instruction-text {
    font-weight: bold;
    color: #000000;
}

.completed-btn {
    display: block;
    margin: auto;
    font-size: 15px;
    margin-top: 10px;
    padding: 4px 10px;
    border-radius: 4px;
    background: #ff5656;
    border: none;
    color: #fff;
}

.completed-label {
    display: block;
    width: max-content;
    margin: 0 auto;
    padding: 4px 10px;
    background: #9e9e9e;
    border-radius: 18px;
    color: #fff;
    font-size: 1rem;
}

.no-work {
    display: block;
    width: max-content;
    margin: 0 auto;
    padding: 4px 10px;
    background: #fdc26a;
    border-radius: 5px;
    color: #ffffff;
    font-size: 0.9rem;
    font-weight: 500;
}

.thumb-container {
    display: flex;
    margin: auto;
    cursor: pointer;
}

.thumb-container.no-image {
    width: 150px;
    height: 150px;
    background: #e0e0e0;
    color: #666;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
}

.thumb {
    display: flex;
    margin: auto;
    width: 150px;
    height: 150px;
    object-fit: cover;
    border-radius: 4px;
}

.thumb-more {
    display: flex;
    margin: auto;
    margin-left: -20px;
    font-size: 2rem;
}

/* モーダル背景 */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.6);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 100;
    /* サイドバー・InfoWindow より上 */
}

/* モーダル本体 */
.modal-content {
    position: relative;
    background: #f8f8f8;
    padding: 1.8rem 2rem;
    border-radius: 8px;
    max-width: min(90vw, 1000px);
    max-height: 90vh;
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* 拡大画像 */
.modal-content img {
    max-width: 600px;
    max-height: 600px;
    border-radius: 4px;
    margin: 0 auto;
    display: block;
}

/* ===== 共通の画像フレーム ===== */
.slide-frame,
.single-img-frame {
    width: 80vmin;
    /* 短辺基準で正方形枠 */
    height: 80vmin;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    /* 次画像がのぞかないように */
}

.modal-content .slide-frame img,
.modal-content .single-img-frame img {
    width: 150%;
    /* どちらの辺かは必ずフィル */
    height: 150%;
    object-fit: contain;
    /* 切り取り・歪みなしで収める */
}

/* ×ボタン */
.modal-close {
    background: transparent;
    border: none;
    font-size: 3rem;
    color: #000000;
    cursor: pointer;
    align-self: flex-end;
}

:global(.splide) {
    width: 100%;
    height: 80vmin;
    /* 枠高に合わせる */
}

:global(.splide__track) {
    height: 100%;
}

:global(.splide__slide) {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.modal-delete {
    position: absolute;
    bottom: 8px;
    left: 8px;
    padding: 4px 10px;
    border: none;
    border-radius: 4px;
    background: #ff3939;
    color: #fff;
    cursor: pointer;
}

/* ---------- フィルタ UI ---------- */
.filter-bar {
    position: absolute;
    top: 60px;
    /* reload-btn より下へ */
    left: 12px;
    display: flex;
    flex-direction: column;
    gap: 6px;
    z-index: 70;
}

.filter {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(6px);
    border: 1px solid #a46cff;
    border-radius: 4px;
    padding: 4px 8px;
    font-size: 0.9rem;
}

.filter summary {
    cursor: pointer;
    font-weight: 600;
}

.filter label {
    display: block;
    margin: 2px 0;
}

.all-check {
    border-bottom: 1px solid #ccc;
    margin-bottom: 4px;
    padding-bottom: 2px;
}

.close-all-btn {
    flex: 0 0 auto;
    /* aside の下に固定される (flexbox)  :contentReference[oaicite:2]{index=2} */
    margin: 10px auto;
    /* 中央寄せ */
    padding: 10px 0;
    width: 100%;
    /* サイドバー内いっぱい */
    border: none;
    border-radius: 3px;
    background: #c764f5be;
    color: #fff;
    font-weight: 600;
    cursor: pointer;
    user-select: none;
}

.close-all-btn:active {
    transform: scale(0.97);
}

.status {
    color: #000000;
}

.msg {
    color: #000000;
}